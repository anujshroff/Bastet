@model List<HostIpViewModel>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>IP Address</th>
                <th>Name</th>
                <th>Created</th>
                <th>Created By</th>
                <th>Last Modified</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hostIp in Model)
            {
                <tr>
                    <td><code>@hostIp.IP</code></td>
                    <td>@(string.IsNullOrEmpty(hostIp.Name) ? "-" : hostIp.Name)</td>
                    <td>@hostIp.CreatedAt.ToString("g")</td>
                    <td>@(string.IsNullOrEmpty(hostIp.CreatedBy) ? "-" : hostIp.CreatedBy)</td>
                    <td>@(hostIp.LastModifiedAt.HasValue ? hostIp.LastModifiedAt.Value.ToString("g") : "-")</td>
                    <td>
                        @inject Bastet.Services.IUserContextService UserContextService
                        <div class="btn-group">
                            @if (UserContextService.UserHasRole(Bastet.Models.ApplicationRoles.Edit))
                            {
                                <a asp-action="Edit" asp-route-ip="@hostIp.IP" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                            }
                            @if (UserContextService.UserHasRole(Bastet.Models.ApplicationRoles.Delete))
                            {
                                <a asp-action="Delete" asp-route-ip="@hostIp.IP" class="btn btn-sm btn-outline-danger">
                                    <i class="bi bi-trash"></i> Delete
                                </a>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
